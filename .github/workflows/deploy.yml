name: Docker Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Create .env file
        run: |
          touch server/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> server/.env
          echo "JWT_REFRESH=${{ secrets.JWT_REFRESH }}" >> server/.env
          echo "CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}" >> server/.env
          echo "RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}" >> server/.env
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}" >> server/.env
          echo "RABBITMQ_PASS=${{ secrets.RABBITMQ_PASS }}" >> server/.env
          
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Images
        run: |
          cd server
          docker-compose build
          docker-compose push

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4


      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ec2-13-59-11-229.us-east-2.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd server
            docker-compose pull
            docker-compose down --volumes --remove-orphans
            docker-compose up -d
            docker image prune -f